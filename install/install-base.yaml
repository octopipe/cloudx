apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: apiserver
    app.kubernetes.io/name: cloudx-apiserver
    app.kubernetes.io/part-of: cloudx
  name: cloudx-apiserver
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudx-controller
    app.kubernetes.io/part-of: cloudx
  name: cloudx-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: apiserver
    app.kubernetes.io/name: cloudx-apiserver
    app.kubernetes.io/part-of: cloudx
  name: cloudx-apiserver
rules:
- apiGroups:
  - commons.cloudx.io
  resources:
  - infras
  - executions
  - connectioninterfaces
  - providerconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - commons.cloudx.io
  resources:
  - infras/finalizers
  verbs:
  - update
- apiGroups:
  - commons.cloudx.io
  resources:
  - infras/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - commons.cloudx.io
  resources:
  - executions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudx-controller
    app.kubernetes.io/part-of: cloudx
  name: cloudx-controller
rules:
- apiGroups:
  - commons.cloudx.io
  resources:
  - infras
  - executions
  - connectioninterfaces
  - providerconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - commons.cloudx.io
  resources:
  - infras/finalizers
  verbs:
  - update
- apiGroups:
  - commons.cloudx.io
  resources:
  - infras/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - commons.cloudx.io
  resources:
  - executions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: apiserver
    app.kubernetes.io/name: cloudx-apiserver
    app.kubernetes.io/part-of: cloudx
  name: cloudx-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloudx-apiserver
subjects:
- kind: ServiceAccount
  name: cloudx-apiserver
  namespace: cloudx-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudx-controller
    app.kubernetes.io/part-of: cloudx
  name: cloudx-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloudx-controller
subjects:
- kind: ServiceAccount
  name: cloudx-controller
  namespace: cloudx-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: apiserver
    app.kubernetes.io/name: cloudx-apiserver
    app.kubernetes.io/part-of: cloudx
  name: cloudx-apiserver
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: cloudx-apiserver
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudx-controller
    app.kubernetes.io/part-of: cloudx
  name: cloudx-controller
spec:
  ports:
  - name: http
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app.kubernetes.io/name: cloudx-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: apiserver
    app.kubernetes.io/name: cloudx-apiserver
    app.kubernetes.io/part-of: cloudx
  name: cloudx-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudx-apiserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudx-apiserver
    spec:
      containers:
      - args:
        - /usr/local/bin/apiserver
        image: mayconjrpacheco/cloudx:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        name: apiserver
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cloudx-apiserver
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudx-controller
    app.kubernetes.io/part-of: cloudx
  name: cloudx-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudx-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudx-controller
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /usr/local/bin/controller
        env:
        - name: RPC_SERVER_ADDRESS
          value: cloudx-controller.cloudx-system:9000
        - name: ENV
          value: prod
        image: mayconjrpacheco/cloudx:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8001
          initialDelaySeconds: 15
          periodSeconds: 20
        name: controller
        ports:
        - containerPort: 9000
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cloudx-controller
      terminationGracePeriodSeconds: 10
